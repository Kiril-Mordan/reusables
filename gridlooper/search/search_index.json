{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Intro","text":"<p>Grid Looper</p> <p>A tool to run experiments based on defined grid and function with single iteration.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install gridlooper\n</code></pre>"},{"location":"flow/","title":"Flow","text":""},{"location":"release-notes/","title":"Release notes","text":""},{"location":"release-notes/#002","title":"0.0.2","text":"<pre><code>- minor refactoring\n</code></pre>"},{"location":"release-notes/#001","title":"0.0.1","text":"<pre><code>- initial version\n</code></pre>"},{"location":"usage-examples/","title":"Grid Looper","text":"<p>A tool to run experiments based on defined grid and function with single iteration.</p> <pre><code>import sys\nsys.path.append('../')\nfrom python_modules.gridlooper import GridLooper\n</code></pre>"},{"location":"usage-examples/#usage-examples","title":"Usage examples","text":"<p>The examples contain:</p> <ol> <li>preparing runner function</li> <li>preparing search grid</li> <li>running experiments</li> <li>analysing results</li> </ol>"},{"location":"usage-examples/#1-preparing-runner-function","title":"1. Preparing runner function","text":"<p>Runner funtion should contain logic of experiment in a way that the parameters could be supplied with <code>embedder_params</code> </p> <pre><code>def runner_function(runner_params : dict, c : int):\n\n    result = int(runner_params['a']) + runner_params['b'] + c\n\n    return result\n</code></pre>"},{"location":"usage-examples/#2-preparing-search-grid","title":"2. Preparing search grid","text":"<p>Experiment combos can be defined in short form, transformed into a list and filtered with <code>exlusion_combos</code>. Some of the parameters in experiment definition could be ignored durring experiment with a use of <code>exclusion_keys</code> parameter.</p> <pre><code>experiments_settings = {\n    'runner_params': {'a' : ['1', '2','4'],\n                        'b' : [2, 6,10,100]},\n\n    'c' : [100, 500],#, 1000, 5000]\n    'name' : 'example experiment'\n}\n\nexclusion_keys = {'name'}\n\nexclusion_combos = [{'runner_params': {'a': ['1','2'],\n                                       'b': [100, 6,10]}}]\n</code></pre> <pre><code>gl = GridLooper(\n    # dictionary of all possible parameter combos\n    experiments_settings = experiments_settings,\n    # keys from the experiments_settings to be ignored\n    exclusion_keys = exclusion_keys,\n    # combos from experiments_settings to be exluded\n    exclusion_combos = exclusion_combos,\n    # function that be run for each of experiment combos\n    runner_function = runner_function,\n    # optional parameter to be supplied to runner function outside of experiment settings\n    data = None,\n    # path to save experiment results\n    save_path = 'example_run.dill')\n</code></pre> <pre><code>gl.prepare_search_grid(\n    # optional if definer earlier\n    experiments_settings = experiments_settings,\n    exclusion_keys = exclusion_keys,\n    exclusion_combos = exclusion_combos\n)\n\n\ngl.experiment_configs\n</code></pre> <pre><code>[{'c': 100,\n  'runner_params': {'a': '1', 'b': 2},\n  'config_id': '8562104a0147be32e0a7611eb5229773906d12c2614826c5fc16b05b76466aba'},\n {'c': 100,\n  'runner_params': {'a': '2', 'b': 2},\n  'config_id': 'a6148a8d9c48e610c40e5fdde002c1601a0c0344b7df4dcd458dbe7e6fe27772'},\n {'c': 100,\n  'runner_params': {'a': '4', 'b': 2},\n  'config_id': '53bc174470bf27ac5b821773d691f6290dd546a703461cde818e1b18eb5224c8'},\n {'c': 100,\n  'runner_params': {'a': '4', 'b': 6},\n  'config_id': 'c341935f88d73f9c0919bdfb061a6d6548ceb83a24e88ce2bda409e489e57e11'},\n {'c': 100,\n  'runner_params': {'a': '4', 'b': 10},\n  'config_id': 'd5643e3314c572d7c65c86cf5f36686891b306473f5958f7d019ecaad768a6d8'},\n {'c': 100,\n  'runner_params': {'a': '4', 'b': 100},\n  'config_id': '4500841c83a8731c56f661b570a7f2a754e2808c41de44a5dd7097accdb437ce'},\n {'c': 500,\n  'runner_params': {'a': '1', 'b': 2},\n  'config_id': '3757452851f2829021b4cf33d08f0fe8049ca4617e6dead2f78aa45db48eeeb4'},\n {'c': 500,\n  'runner_params': {'a': '2', 'b': 2},\n  'config_id': '598e1072c1d2953abffc9cb2518b09daec7fc78d261920a328a9396820cd3edd'},\n {'c': 500,\n  'runner_params': {'a': '4', 'b': 2},\n  'config_id': '052e617f5141d37da96e804759603c6d0e8df10dfb5489cf383ed2813b8f87b8'},\n {'c': 500,\n  'runner_params': {'a': '4', 'b': 6},\n  'config_id': '5c862e5bfeab31aa17483a39a92b455401e49679b1fa3f191beaebec74b396d7'},\n {'c': 500,\n  'runner_params': {'a': '4', 'b': 10},\n  'config_id': 'aded884015788f0e9152cbb286604945e7a2f109309a8059efbe35a801ff8b54'},\n {'c': 500,\n  'runner_params': {'a': '4', 'b': 100},\n  'config_id': 'c2900743d454591bcce89c767591edf9044c2c77baae1e271f19a3570f2b0c8f'}]\n</code></pre>"},{"location":"usage-examples/#3-running-experiments","title":"3. Running experiments","text":"<p><code>executing_experimets</code> function will run <code>runner_function</code> for each set of parameters from defined <code>experiment_configs</code> for a select loop strategy.</p> <pre><code>gl.executing_experimets(\n    # optional of defined earlier\n    runner_function = runner_function,\n    experiment_configs = gl.experiment_configs,\n    data = None,\n    loop_type= 'brute',\n    save_path = 'example_run.dill'\n)\n</code></pre> <p>Looping:   0%|          | 0/12 [00:00&lt;?, ?item/s]</p> <p>Looping: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 12/12 [00:00&lt;00:00, 120989.54item/s]</p>"},{"location":"usage-examples/#4-analysing-results","title":"4. Analysing results","text":"<pre><code>gl.experiment_results['results']\n</code></pre> <pre><code>{'8562104a0147be32e0a7611eb5229773906d12c2614826c5fc16b05b76466aba': 103,\n 'a6148a8d9c48e610c40e5fdde002c1601a0c0344b7df4dcd458dbe7e6fe27772': 104,\n '53bc174470bf27ac5b821773d691f6290dd546a703461cde818e1b18eb5224c8': 106,\n 'c341935f88d73f9c0919bdfb061a6d6548ceb83a24e88ce2bda409e489e57e11': 110,\n 'd5643e3314c572d7c65c86cf5f36686891b306473f5958f7d019ecaad768a6d8': 114,\n '4500841c83a8731c56f661b570a7f2a754e2808c41de44a5dd7097accdb437ce': 204,\n '3757452851f2829021b4cf33d08f0fe8049ca4617e6dead2f78aa45db48eeeb4': 503,\n '598e1072c1d2953abffc9cb2518b09daec7fc78d261920a328a9396820cd3edd': 504,\n '052e617f5141d37da96e804759603c6d0e8df10dfb5489cf383ed2813b8f87b8': 506,\n '5c862e5bfeab31aa17483a39a92b455401e49679b1fa3f191beaebec74b396d7': 510,\n 'aded884015788f0e9152cbb286604945e7a2f109309a8059efbe35a801ff8b54': 514,\n 'c2900743d454591bcce89c767591edf9044c2c77baae1e271f19a3570f2b0c8f': 604}\n</code></pre>"}]}