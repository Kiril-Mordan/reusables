name: Update README

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
  workflow_run:
      workflows: ["Generate PlantUML Diagrams"]
      types:
        - completed

jobs:
  documentation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Fetches prev commits

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Find Changed Modules
        id: changed-modules
        run: |
          echo "Changed files:"
          changed_files=$(git diff --name-only HEAD~ HEAD | { grep 'python_modules/' || grep 'example_notebooks/'; })

          if [ -z "$changed_files" ]; then
              echo "No changes found between HEAD and HEAD~1. Checking between HEAD~1 and HEAD~2..."
              changed_files=$(git diff --name-only HEAD~2 HEAD~1 | { grep 'python_modules/' || grep 'example_notebooks/'; })
          fi

          if [ -z "$changed_files" ]; then
              echo "No changes found between HEAD~2 HEAD~1. Checking between HEAD~2 and HEAD~3..."
              changed_files=$(git diff --name-only HEAD~3 HEAD~2 | { grep 'python_modules/' || grep 'example_notebooks/'; })
          fi

          if [ -z "$changed_files" ]; then
              echo "No changes found."
          else
              echo "Changed files:"
              echo $changed_files
          fi

          echo "files=${changed_files}" >>$GITHUB_OUTPUT

      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install python dependencies
        run: pip install -r env_spec/requirements.txt

      - name: Add Python Kernel
        run: python -m ipykernel install --user --name python3

      - name: Generate md files from jupyter for changed modules
        run: |
          ./tools/convert_ipynb_to_markdown.sh ${{ steps.changed-modules.outputs.files }}

      - name: Update README.md
        run: |
          ./tools/update_README.sh

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin HEAD:main
          git add docs README.md
          # Check if there are any changes in the working directory
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Update README"
            git push
          else
            echo "No changes to commit"
          fi
