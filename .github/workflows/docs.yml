name: Update README

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
  workflow_run:
    workflows: ["Generate PlantUML Diagrams"]
    types:
      - completed

jobs:
  documentation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetches prev commits

      - name: Install Draw.io Desktop and Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget xvfb
          wget https://github.com/jgraph/drawio-desktop/releases/download/v20.8.15/drawio-amd64-20.8.15.deb
          sudo dpkg -i drawio-amd64-20.8.15.deb
          sudo apt-get install -f

      - name: Export drawio files to png files
        run: |
          chmod +x ./tools/convert_drawio_to_png.sh
          ./tools/convert_drawio_to_png.sh
        # uses: rlespinasse/drawio-export-action@v2
        # with:
        #   path: drawio
        #   format: png
        #   transparent: true
        #   output: docs
        #   scale: 2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Find Changed Modules
        id: changed-modules
        run: |

          if [ "${{ github.event.inputs.package_name }}" != "" ]; then
            echo "${{ github.event.inputs.package_name }}" > changed_files
          else
            chmod +x ./tools/find_and_process_changed_files.sh
            ./tools/find_and_process_changed_files.sh 'python_modules/' 'example_notebooks/' 'example_notebooks/' '.ipynb'
          fi

          if [ -s changed_files ]; then
              echo "::set-output name=files::$(cat changed_files)"
          fi

    
      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install python dependencies
        run: pip install -r env_spec/requirements.txt

      - name: Add Python Kernel
        run: python -m ipykernel install --user --name python3

      - name: Generate md files from jupyter for changed modules
        if: steps.changed-modules.outputs.files != ''
        run: |
          ./tools/convert_ipynb_to_markdown.sh ${{ steps.changed-modules.outputs.files }}

      - name: Update README.md
        run: |
          sudo mv drawio/docs/* docs
          chmod +x ./tools/update_README.sh
          chmod +x ./tools/update_readme_alt_content.sh
          chmod +x ./tools/update_gh_pages_links.sh
          ./tools/update_README.sh

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin HEAD:main
          git add docs README.md
          # Check if there are any changes in the working directory
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update README"
            git push
          fi
