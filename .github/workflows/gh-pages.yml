name: Deploy MkDocs site to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'Name of the package'
        required: false


jobs:
  build_site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install jq

      - name: Find Changed Modules
        id: changed-modules
        run: |
          if [ "${{ github.event.inputs.package_name }}" != "" ]; then
            echo "${{ github.event.inputs.package_name }}" > changed_files
          else
            chmod +x .github/tools/find_and_process_changed_files.sh
            chmod +x .github/tools/get_paa_change_dirs.sh
            .github/tools/find_and_process_changed_files.sh $(.github/tools/get_paa_change_dirs.sh) '' ''
          fi

          if [ -s changed_files ]; then
              echo "::set-output name=files::$(cat changed_files)"
          fi

      - name: Setup Python
        if: steps.changed-modules.outputs.files != ''
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        if: steps.changed-modules.outputs.files != ''
        run: |
          pip install -r .paa/requirements_dev.txt

      - name: Build site
        if: steps.changed-modules.outputs.files != ''
        run: paa test-install "${{ steps.changed-modules.outputs.files }}" --keep-temp-files --build-mkdocs

      - name: Prepare site for gh-pages
        if: steps.changed-modules.outputs.files != ''
        run: |
          LABEL_NAME=${{ steps.changed-modules.outputs.files }}
          echo "LABEL_NAME=${LABEL_NAME}" >> $GITHUB_ENV
          mv "${LABEL_NAME}_temp_mkdocs" temp_project

      - name: Deploy to GitHub Pages
        if: steps.changed-modules.outputs.files != ''
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./temp_project/site
          destination_dir: "${{ env.LABEL_NAME }}"

