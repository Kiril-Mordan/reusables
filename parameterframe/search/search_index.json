{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Intro","text":"<p>Parameterframe</p> <p>The module provides an interface for managing solution parameters. It allows for the structured storage and retrieval of parameter sets from a database.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install parameterframe\n</code></pre>"},{"location":"flow/","title":"Flow","text":""},{"location":"release-notes/","title":"Release notes","text":""},{"location":"release-notes/#016","title":"0.1.6","text":"<pre><code>- fixing error with scores when parametersets are not loaded\n</code></pre>"},{"location":"release-notes/#015","title":"0.1.5","text":"<pre><code>- overlap ration scores\n</code></pre>"},{"location":"release-notes/#014","title":"0.1.4","text":"<pre><code>- option to not load attributes when pulling solutions\n</code></pre>"},{"location":"release-notes/#013","title":"0.1.3","text":"<pre><code>- fixes and preparations for initial api\n</code></pre>"},{"location":"release-notes/#012","title":"0.1.2","text":"<pre><code>- binary compression and decompression with zlib\n\n- optional symmetric encryption and decryption with cryptography lib\n</code></pre>"},{"location":"release-notes/#011","title":"0.1.1","text":"<pre><code>- bugfixes for random name and id generators\n\n- separating logic of uploading solution descriptions from the rest of tables\n\n- prints to show generated names and ids\n\n- function to pull parameter set ids for deployment status\n\n- ability to get and change deployment statuses of parameter sets\n\n- updated usage examples; user friendly functions to show commited solutions, parameter sets and parameter info; ability to pull all tables for a select solution\n</code></pre>"},{"location":"release-notes/#003","title":"0.0.3","text":"<pre><code>- new DatabaseConnector with sqlalchemy\n</code></pre>"},{"location":"schema/","title":"Schema","text":""},{"location":"usage-examples/","title":"Parameterframe","text":"<p>The module provides an interface for managing solution parameters. It allows for the structured storage and retrieval of parameter sets from a database.</p> <pre><code>import sys\nimport pandas as pd\nimport os\nsys.path.append('../')\nfrom parameterframe import ParameterFrame, MockerDatabaseConnector, SqlAlchemyDatabaseManager\n\n</code></pre>"},{"location":"usage-examples/#content","title":"Content","text":"<ol> <li>Adding new solution and uploading it</li> <li>Processing new files and creating parameter set</li> <li>Adding parameter set to solution and commiting</li> <li>Uploading parameter sets</li> <li>Getting latest parameter set id for solution</li> <li>Changing parameter set status</li> <li>Pulling select parameter sets</li> <li>Reconstructing parameter se</li> <li>Structure of local commit tables</li> <li>Scores</li> </ol>"},{"location":"usage-examples/#1-adding-new-solution-and-uploading-it","title":"1. Adding new solution and uploading it","text":"<pre><code># - with database connector for MockerDB\npf = ParameterFrame(\n    database_connector = MockerDatabaseConnector(connection_details = {\n    'base_url' : 'http://localhost:8001'})\n)\n</code></pre> <p>when using SqlAlchemyDatabaseManager with database for the first time, it might be useful to create tables with <code>SqlAlchemyDatabaseManager.create_tables</code> and if schema of the database needs to be reset <code>SqlAlchemyDatabaseManager.drop_tables</code></p> <pre><code># - with SqlAlchemy database connector\npf = ParameterFrame(\n    database_connector = SqlAlchemyDatabaseManager(connection_details = {\n    'base_url' : 'postgresql+psycopg2://postgres:mysecretpassword@localhost:5432/mytestdb'})\n)\n</code></pre> <pre><code>pf.show_solutions()\n</code></pre> solution_id solution_name solution_description deployment_date deprecation_date maintainers commited_parameter_sets aos pos <pre><code>pf.add_solution(\n    # mandatory\n    solution_name=\"new_example_solution\",\n    # optional description\n    solution_description=\"Description of new example solution.\",\n    deployment_date=\"2024-xx-xx\",\n    deprecation_date=None,\n    maintainers=\"some text about maintainers credentials\"\n)\n\npf.add_solution(\n    # mandatory\n    solution_name=\"new_example_solution2\",\n    # optional description\n    solution_description=\"Description of new example solution.\",\n    deployment_date=\"2024-xx-xx\",\n    deprecation_date=None,\n    maintainers=\"some text about maintainers credentials\"\n)\n</code></pre> <pre><code>Solution id for new_example_solution: b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca\nSolution id for new_example_solution2: 1c0b910dc0074ea3966fbb1a96038e5eaee8dc1b873f9867830e0659b54dd311\n\n\n\n\n\nTrue\n</code></pre> <pre><code>pf.commit_solution(\n    # either solution id or solution name should be provided\n    solution_name=\"new_example_solution\"\n)\n\npf.commit_solution(\n    # either solution id or solution name should be provided\n    solution_name=\"new_example_solution2\"\n)\n</code></pre> <pre><code>Commited solution description for b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca\nCommited solution description for 1c0b910dc0074ea3966fbb1a96038e5eaee8dc1b873f9867830e0659b54dd311\n\n\n\n\n\nTrue\n</code></pre> <pre><code>pf.show_solutions()\n</code></pre> solution_id solution_name solution_description deployment_date deprecation_date maintainers commited_parameter_sets aos pos 0 b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca new_example_solution Description of new example solution. 2024-xx-xx None some text about maintainers credentials 0 0 0 1 1c0b910dc0074ea3966fbb1a96038e5eaee8dc1b873f9867830e0659b54dd311 new_example_solution2 Description of new example solution. 2024-xx-xx None some text about maintainers credentials 0 0 0 <pre><code>pf.push_solution(\n    # either solution id or solution name should be provided\n    solution_name = \"new_example_solution\"\n)\n</code></pre> <pre><code>True\n</code></pre>"},{"location":"usage-examples/#2-processing-new-files-and-creating-parameter-set","title":"2. Processing new files and creating parameter set","text":"<pre><code>params_path = \"../tests/parameterframe/example_configs\"\n</code></pre> <pre><code>pf = ParameterFrame(\n    params_path = params_path,\n    database_connector = MockerDatabaseConnector(connection_details = {\n    'base_url' : 'http://localhost:8001'})\n)\n</code></pre> <pre><code>pf = ParameterFrame(\n    params_path = params_path,\n    database_connector = SqlAlchemyDatabaseManager(connection_details = {\n    'base_url' : 'postgresql+psycopg2://postgres:mysecretpassword@localhost:5432/mytestdb'})\n)\n</code></pre> <pre><code>pf.process_parameters_from_files()\n</code></pre> <pre><code>True\n</code></pre> <pre><code>pf.show_solutions()\n</code></pre> solution_id solution_name solution_description deployment_date deprecation_date maintainers commited_parameter_sets aos pos <pre><code>pf.make_parameter_set(\n    parameter_set_name=\"test_set\",\n    parameter_set_description=\"example parameters for test purposes\",\n    parameter_names=['param_1','param_2','param_10', 'param_11','param_21']\n)\n</code></pre> <pre><code>Parameter set id for test_set: a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5\n</code></pre>"},{"location":"usage-examples/#3-adding-parameter-set-to-solution-and-commiting","title":"3. Adding parameter set to solution and commiting","text":"<pre><code>pf.add_parameter_set_to_solution(\n    solution_id = 'b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n    parameter_set_name=\"test_set\")\n</code></pre> <pre><code>b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca is not in solutions saved to memory!\nName pink_happy_car_642 is assigned to b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca temporarily!\n\n\n\n\n\nTrue\n</code></pre> <pre><code>pf.commit_solution(solution_name=\"pink_happy_car_642\",\n                    parameter_set_names=[\"test_set\"])\n</code></pre> <pre><code>Commited solution tables for b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca\n\n\n\n\n\nTrue\n</code></pre> <pre><code>pf.show_solutions()\n</code></pre> solution_id solution_name solution_description deployment_date deprecation_date maintainers commited_parameter_sets aos pos 0 b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca None None None None None 1 0.05 0.0 <pre><code>pf.show_parameter_sets(solution_id = 'b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca')\n</code></pre> parameter_set_id parameter_set_name parameter_set_description deployment_status insertion_datetime commited_parameters aos pos 0 a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 test_set example parameters for test purposes STAGING 2024-05-21 03:03:23 5 0.05 0.0 <pre><code>pf.show_parameters(solution_id = 'b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n                   parameter_set_id = 'a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5')\n</code></pre> parameter_id parameter_name parameter_description file_name file_type commited_attributes aos 0 4cea5b09e77da310c5105978f2ceea5c5d8c9c7b65d0e00b45135ea90fc011af param_1 param_1.yaml yaml 3 0.05 1 bf11768decb1d0204e2636edd05c354573d473e67f1b048369b2ee99c865bf5f param_2 param_2.yaml yaml 6 0.05 2 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be param_10 param_10.txt txt 9 0.00 3 ace2f31433212fbf9e764069a30a7675ca78f496d31f061d06d0a0420fc52768 param_11 param_11.dill other 1 0.00 4 1a4f19ee9e186ee739daecbc778501c5851d3fb5d05c4a3c1200e599855e8689 param_21 param_21.ipynb other 2 0.00"},{"location":"usage-examples/#4-uploading-parameter-sets","title":"4. Uploading parameter sets","text":"<pre><code>pf.push_solution(solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n                 parameter_set_names=[\"test_set\"])\n</code></pre> <pre><code>True\n</code></pre>"},{"location":"usage-examples/#5-getting-latest-parameter-set-id-for-solution","title":"5. Getting latest parameter set id for solution","text":"<pre><code># - with database connector for MockerDB\npf = ParameterFrame(\n    database_connector = MockerDatabaseConnector(connection_details = {\n    'base_url' : 'http://localhost:8001'})\n)\n</code></pre> <pre><code># - with SqlAlchemy database connector\npf = ParameterFrame(\n    database_connector = SqlAlchemyDatabaseManager(connection_details = {\n    'base_url' : 'postgresql+psycopg2://postgres:mysecretpassword@localhost:5432/mytestdb'})\n)\n</code></pre> <pre><code>pf.get_parameter_set_id_for_solution(solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n                                                        deployment_status=\"STAGING\")\n</code></pre> <pre><code>['a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5']\n</code></pre> <pre><code>pf.get_deployment_status(solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n                         parameter_set_id='a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5')\n</code></pre> <pre><code>'STAGING'\n</code></pre>"},{"location":"usage-examples/#6-changing-parameter-set-status","title":"6. Changing parameter set status","text":"<pre><code># - with database connector for MockerDB\npf = ParameterFrame(\n    database_connector = MockerDatabaseConnector(connection_details = {\n    'base_url' : 'http://localhost:8001'})\n)\n</code></pre> <pre><code># - with SqlAlchemy database connector\npf = ParameterFrame(\n    database_connector = SqlAlchemyDatabaseManager(connection_details = {\n    'base_url' : 'postgresql+psycopg2://postgres:mysecretpassword@localhost:5432/mytestdb'})\n)\n</code></pre> <pre><code>pf.database_connector.modify_parameter_set_status(\n    solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n    parameter_set_ids = 'a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5',\n    current_deployment_status = \"PRODUCTION\",\n    new_deployment_status = \"STAGING\"\n)\n</code></pre> <pre><code>True\n</code></pre> <pre><code>pf.change_status_from_staging_to_production(\n    solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n    parameter_set_id='a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5'\n)\n</code></pre> <pre><code>b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca + a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 : STAGING -&gt; PRODUCTION\n</code></pre> <pre><code>pf.get_deployment_status(solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n                         parameter_set_id='a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5')\n</code></pre> <pre><code>'PRODUCTION'\n</code></pre> <pre><code>pf.change_status_from_production_to_archived(\n    solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n    parameter_set_id='a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5'\n)\n</code></pre> <pre><code>b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca + a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 : PRODUCTION -&gt; ARCHIVED\n</code></pre> <pre><code>pf.get_deployment_status(solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n                         parameter_set_id='a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5')\n</code></pre> <pre><code>'ARCHIVED'\n</code></pre> <pre><code>pf.change_status_from_archived_production(\n    solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n    parameter_set_id='a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5'\n)\n</code></pre> <pre><code>No deployed parameter_set_ids with PRODUCTION from selected!\nb5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca + a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 : ARCHIVED -&gt; PRODUCTION\n</code></pre> <pre><code>pf.get_deployment_status(solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n                         parameter_set_id='a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5')\n</code></pre> <pre><code>'PRODUCTION'\n</code></pre>"},{"location":"usage-examples/#7-pulling-select-parameter-sets","title":"7. Pulling select parameter sets","text":"<pre><code>params_path = \"../tests/parameterframe/example_configs\"\n</code></pre> <pre><code># - with database connector for MockerDB\npf2 = ParameterFrame(\n    params_path = params_path,\n    database_connector = MockerDatabaseConnector(connection_details = {\n    'base_url' : 'http://localhost:8001'})\n)\n</code></pre> <pre><code># - with SqlAlchemy database connector\npf2 = ParameterFrame(\n    params_path = params_path,\n    database_connector = SqlAlchemyDatabaseManager(connection_details = {\n    'base_url' : 'postgresql+psycopg2://postgres:mysecretpassword@localhost:5432/mytestdb'})\n)\n</code></pre> <pre><code>pf2.show_solutions()\n</code></pre> solution_id solution_name solution_description deployment_date deprecation_date maintainers commited_parameter_sets aos pos <p>When pulling information with database handler, one could pull specific parameter sets, solutions and everything.</p> <pre><code>pf2.pull_solution(solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n                  # optionally specify parameter_set_id\n                 parameter_set_id='a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5')\n</code></pre> <pre><code>HTTP Request: POST http://localhost:8001/search \"HTTP/1.1 200 OK\"\nHTTP Request: POST http://localhost:8001/search \"HTTP/1.1 200 OK\"\nHTTP Request: POST http://localhost:8001/search \"HTTP/1.1 200 OK\"\nNo data was found with applied filters!\nNo solutions with b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca could be pulled!\n\n\n\n\n\nTrue\n</code></pre> <pre><code>pf2.pull_solution(solution_id='b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca',\n                  # optionally specify parameter_set_id\n                 parameter_set_id=None)\n</code></pre> <pre><code>No solutions with b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca could be pulled!\nNo parameter sets were pulled for solution_id b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca\nNothing was pulled for b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca\n\n\n\n\n\nTrue\n</code></pre> <pre><code>pf2.pull_solution(\n    # optional parameter to skip pull of attributes if data pulled just for show_ methods\n    pull_attribute_values = False\n)\n</code></pre> <pre><code>True\n</code></pre> <pre><code>pf2.show_solutions()\n</code></pre> solution_id solution_name solution_description deployment_date deprecation_date maintainers commited_parameter_sets aos pos 0 cec89c4cbb8c891d388407ea93d84a5cd4f996af6d5c1b0cc5fe1cb12101acf5 new_example_solution Description of new example solution. 2024-xx-xx None some text about maintainers credentials 6 0.397157 0.428571 <pre><code>pf2.show_parameter_sets(solution_id='cec89c4cbb8c891d388407ea93d84a5cd4f996af6d5c1b0cc5fe1cb12101acf5')\n</code></pre> parameter_set_id parameter_set_name parameter_set_description deployment_status insertion_datetime commited_parameters aos pos 0 5779bbf896ebb8f09a6ea252b09f8adb1a416e8780cf1424fb9bb93dbec8deb5 green_tiny_car_749 STAGING 2024-05-15 01:36:09 3 0.025744 0.285714 1 73ece98c90d4e0bcce8b523a8e8d2bd4290c68f2a783ea279b39fe4507e42de7 blue_fuzzy_refrigerator_297 STAGING 2024-05-15 23:57:17 1 0.000000 0.000000 2 82b8c5340454adf83667e59092fedbee28213475fd58ab6b3d95b4fc60f4d45f purple_giant_television_135 STAGING 2024-05-16 00:05:43 1 0.371413 0.142857 3 3940d6dd4c0d817625a31141874c54cf0c8d88b24994f7915deb4096b3c8d0cf blue_tiny_television_381 STAGING 2024-05-15 00:37:50 2 0.025744 0.285714 4 dddc057bc151de9f8fb8caa834c8e13b789cf68cb53299b4c65c23f1e1310acd red_sad_scooter_769 STAGING 2024-05-16 00:08:21 2 0.371413 0.142857 5 2f3ee8e19d91a89298d40984df5e7bdd1f1a48008b2e61c88a7f6f81b4ab23f5 silver_happy_car_441 STAGING 2024-05-16 00:03:25 1 0.000000 0.000000 <pre><code>pf2.show_parameters(solution_id='cec89c4cbb8c891d388407ea93d84a5cd4f996af6d5c1b0cc5fe1cb12101acf5',\n                    parameter_set_id='3940d6dd4c0d817625a31141874c54cf0c8d88b24994f7915deb4096b3c8d0cf')\n</code></pre> parameter_id parameter_name parameter_description file_name file_type commited_attributes aos 0 3386ebc962b1c57745ca24320bf873df6eb84a2b9cb733607d72006347bf95b8 Screenshot 2024-05-04 at 02 Screenshot 2024-05-04 at 02.59.31.png other 35 0.0 1 5afae3951544cd3736685a3b2daa31c00106191a799b96b0c636cd35e9a416ff uploads uploads.zip other 61 0.0 <pre><code>pf2.show_parameters(solution_id='cec89c4cbb8c891d388407ea93d84a5cd4f996af6d5c1b0cc5fe1cb12101acf5',\n                    parameter_set_id='5779bbf896ebb8f09a6ea252b09f8adb1a416e8780cf1424fb9bb93dbec8deb5')\n</code></pre> parameter_id parameter_name parameter_description file_name file_type commited_attributes aos 0 3386ebc962b1c57745ca24320bf873df6eb84a2b9cb733607d72006347bf95b8 Screenshot 2024-05-04 at 02 Screenshot 2024-05-04 at 02.59.31.png other 35 0.0 1 4d8ca206d9bd09296b69a95f0c3c62d233282025964c356811510cc074cc2c49 1 1. AF - opis projektu.pdf other 34 0.0 2 5afae3951544cd3736685a3b2daa31c00106191a799b96b0c636cd35e9a416ff uploads uploads.zip other 61 0.0 <pre><code>pf2.show_parameters(solution_id='cec89c4cbb8c891d388407ea93d84a5cd4f996af6d5c1b0cc5fe1cb12101acf5',\n                    parameter_set_id='dddc057bc151de9f8fb8caa834c8e13b789cf68cb53299b4c65c23f1e1310acd')\n</code></pre> parameter_id parameter_name parameter_description file_name file_type commited_attributes aos 0 e6ae9d10f3b4d69c1ef6ff8038d13e9f0b093fc3710f2fed0259204aac2fcba4 Geekbench 6 Geekbench 6.app.zip other 1385 0.0 1 be0886c2f5d24aa5672bf84e355d9d4adb527a36e5e973413c555200d7f3fdb2 Ollama Ollama.app.zip other 1400 0.0 <pre><code>pf2.show_parameters(solution_id='cec89c4cbb8c891d388407ea93d84a5cd4f996af6d5c1b0cc5fe1cb12101acf5',\n                    parameter_set_id='82b8c5340454adf83667e59092fedbee28213475fd58ab6b3d95b4fc60f4d45f')\n</code></pre> parameter_id parameter_name parameter_description file_name file_type commited_attributes aos 0 e6ae9d10f3b4d69c1ef6ff8038d13e9f0b093fc3710f2fed0259204aac2fcba4 Geekbench 6 Geekbench 6.app.zip other 1385 0.0"},{"location":"usage-examples/#8-reconstructing-parameter-set","title":"8. Reconstructing parameter set","text":"<pre><code>os.listdir(\"../tests/parameterframe/reconstructed_files\")\n</code></pre> <pre><code>[]\n</code></pre> <pre><code>pf2.reconstruct_parameter_set(\n    solution_name = \"new_example_solution\",\n    parameter_set_name = \"test_set\",\n    params_path = \"../tests/parameterframe/reconstructed_files\"\n)\n\nos.listdir(\"../tests/parameterframe/reconstructed_files\")\n</code></pre> <pre><code>['param_2.yaml',\n 'param_11.dill',\n 'param_1.yaml',\n 'param_10.txt',\n 'param_21.ipynb']\n</code></pre>"},{"location":"usage-examples/#9-structure-of-commit-tables","title":"9. Structure of commit tables","text":""},{"location":"usage-examples/#solution_description","title":"solution_description","text":"<pre><code>pd.DataFrame(pf2.commited_tables['b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca']['solution_description'])\n</code></pre> solution_id solution_name solution_description deployment_date deprecation_date maintainers 0 b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca new_example_solution Description of new example solution. 2024-xx-xx None some text about maintainers credentials"},{"location":"usage-examples/#solution_parameter_set","title":"solution_parameter_set","text":"<pre><code>param_set_id = 'a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5'\n\npd.DataFrame(pf2.commited_tables['b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca']['solution_parameter_set'][param_set_id])\n</code></pre> solution_id parameter_set_id deployment_status insertion_datetime 0 b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 PRODUCTION 2024-05-07 19:51:13"},{"location":"usage-examples/#parameter_set","title":"parameter_set","text":"<pre><code>pd.DataFrame(pf2.commited_tables['b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca']\\\n    ['parameter_set']\\\n        [param_set_id])\n</code></pre> parameter_set_id parameter_id 0 a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 4cea5b09e77da310c5105978f2ceea5c5d8c9c7b65d0e00b45135ea90fc011af 1 a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 bf11768decb1d0204e2636edd05c354573d473e67f1b048369b2ee99c865bf5f 2 a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be 3 a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 ace2f31433212fbf9e764069a30a7675ca78f496d31f061d06d0a0420fc52768 4 a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 1a4f19ee9e186ee739daecbc778501c5851d3fb5d05c4a3c1200e599855e8689"},{"location":"usage-examples/#parameter_set_description","title":"parameter_set_description","text":"<pre><code>pd.DataFrame(pf2.commited_tables['b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca']\\\n    ['parameter_set_description']\\\n        [param_set_id])\n</code></pre> parameter_set_id parameter_set_name parameter_set_description 0 a54f04d2ff154294309403206e059aec556cdcfa51120649ce663f3230a970d5 test_set example parameters for test purposes"},{"location":"usage-examples/#parameter_description","title":"parameter_description","text":"<pre><code>pd.DataFrame([tab for param_id, tab_list in pf2.commited_tables['b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca']\\\n    ['parameter_description']\\\n        [param_set_id].items()\\\n            for tab in tab_list])\n</code></pre> parameter_id parameter_name parameter_description file_name file_type 0 4cea5b09e77da310c5105978f2ceea5c5d8c9c7b65d0e00b45135ea90fc011af param_1 param_1.yaml yaml 1 bf11768decb1d0204e2636edd05c354573d473e67f1b048369b2ee99c865bf5f param_2 param_2.yaml yaml 2 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be param_10 param_10.txt txt 3 ace2f31433212fbf9e764069a30a7675ca78f496d31f061d06d0a0420fc52768 param_11 param_11.dill other 4 1a4f19ee9e186ee739daecbc778501c5851d3fb5d05c4a3c1200e599855e8689 param_21 param_21.ipynb other"},{"location":"usage-examples/#parameter_attribute","title":"parameter_attribute","text":"<pre><code>pd.DataFrame([tab for param_id, tab_list in pf2.commited_tables['b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca']\\\n    ['parameter_attribute']\\\n        [param_set_id].items() \\\n            for tab in tab_list])\n</code></pre> parameter_id attribute_id previous_attribute_id 0 4cea5b09e77da310c5105978f2ceea5c5d8c9c7b65d0e00b45135ea90fc011af ee25af17445d7622cbf61a5b9424246a1f3104704b68bd31b9b7532471d492e5 None 1 4cea5b09e77da310c5105978f2ceea5c5d8c9c7b65d0e00b45135ea90fc011af 8b5b2be24e60ba407b90967820da8a1385a6d67691a02bc663703160ef655101 None 2 4cea5b09e77da310c5105978f2ceea5c5d8c9c7b65d0e00b45135ea90fc011af 52ea872c99c586530348ba8902dcab831761673d25cf1cb0023576820289ce6b None 3 bf11768decb1d0204e2636edd05c354573d473e67f1b048369b2ee99c865bf5f 7d5ee0e0cd00c3703e5f346c6887baf503faaf9fe090774f6866311f4fa34179 None 4 bf11768decb1d0204e2636edd05c354573d473e67f1b048369b2ee99c865bf5f ee25af17445d7622cbf61a5b9424246a1f3104704b68bd31b9b7532471d492e5 7d5ee0e0cd00c3703e5f346c6887baf503faaf9fe090774f6866311f4fa34179 5 bf11768decb1d0204e2636edd05c354573d473e67f1b048369b2ee99c865bf5f 3367512147bf19ae99c986b356af11dcdc067376aa1b79eb8ba8f61324e8dc18 7d5ee0e0cd00c3703e5f346c6887baf503faaf9fe090774f6866311f4fa34179 6 bf11768decb1d0204e2636edd05c354573d473e67f1b048369b2ee99c865bf5f 341769820d8937a5c9f9b980eefca37f3f37fcc6fd01c6f4c930fdb9d5dd5128 7d5ee0e0cd00c3703e5f346c6887baf503faaf9fe090774f6866311f4fa34179 7 bf11768decb1d0204e2636edd05c354573d473e67f1b048369b2ee99c865bf5f 2e8b00e571f9d835d3f022a9ff49b9779034ab21bffdcde075d9d729fabeb960 341769820d8937a5c9f9b980eefca37f3f37fcc6fd01c6f4c930fdb9d5dd5128 8 bf11768decb1d0204e2636edd05c354573d473e67f1b048369b2ee99c865bf5f ecd93cf051988b23b3590415f4e7d550de264600d7d2af8704c973b9c98ca6a9 341769820d8937a5c9f9b980eefca37f3f37fcc6fd01c6f4c930fdb9d5dd5128 9 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be fa4e8d81f4dbe6d306aff59bea4693d325a203be5d5b9fde5d5f1e7cce26b861 None 10 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be c26e7e96f0f3647c159b0934f4dc55207ac059abb56005d7a8acd8344ef14798 fa4e8d81f4dbe6d306aff59bea4693d325a203be5d5b9fde5d5f1e7cce26b861 11 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be f7cd339f77c1799f399d8ebcbb27f2d41a448622254d64e9270ae2316211ac1d c26e7e96f0f3647c159b0934f4dc55207ac059abb56005d7a8acd8344ef14798 12 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be 15a33fe62774a1857b404f453ba1195eb4355e10bc9519f2f991dd7ba8db19b7 f7cd339f77c1799f399d8ebcbb27f2d41a448622254d64e9270ae2316211ac1d 13 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be 99761e3d58bc213dc3ab33f2dc8dabe5f97d3aea6b59cd367d40b76937f49aa6 15a33fe62774a1857b404f453ba1195eb4355e10bc9519f2f991dd7ba8db19b7 14 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be 036a9c122c1f4c9304afa23c4d1fce5224c270a206889afa689f3efb36ff368d 99761e3d58bc213dc3ab33f2dc8dabe5f97d3aea6b59cd367d40b76937f49aa6 15 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be e72aa8015688052f4e7fddbf4c74e5bf2bd74239ebf3902a5fdc008ecb03aa46 036a9c122c1f4c9304afa23c4d1fce5224c270a206889afa689f3efb36ff368d 16 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be 0ae8eda3dbeedbc17e27a679c5426dd3af1434f7c37b4ecd3b2fb5c492272b75 e72aa8015688052f4e7fddbf4c74e5bf2bd74239ebf3902a5fdc008ecb03aa46 17 9a4a3ace265c9bf2facc0044ca24260c42805c6e7b2a608dfd2f56a54d9d36be cedcfbb0d95798514b6aaf30118fff7b46f863f1bc8b80bb2ddd2145e5b3f318 0ae8eda3dbeedbc17e27a679c5426dd3af1434f7c37b4ecd3b2fb5c492272b75 18 ace2f31433212fbf9e764069a30a7675ca78f496d31f061d06d0a0420fc52768 ace2f31433212fbf9e764069a30a7675ca78f496d31f061d06d0a0420fc52768 None 19 1a4f19ee9e186ee739daecbc778501c5851d3fb5d05c4a3c1200e599855e8689 87d93e1862f0f58199c3fcb7114b92fe59f03581804b1c8419868fb00ff8a469 None 20 1a4f19ee9e186ee739daecbc778501c5851d3fb5d05c4a3c1200e599855e8689 b4a705d09aa0361f4db453da32abb05a5c4e0249d6180d2b8a58d72d08dbd6a0 87d93e1862f0f58199c3fcb7114b92fe59f03581804b1c8419868fb00ff8a469 21 1a4f19ee9e186ee739daecbc778501c5851d3fb5d05c4a3c1200e599855e8689 e4e2c33a2ea67f34bf3ac1e9d99edaad501c7dc4ea82f4b60e9d959418d8438d b4a705d09aa0361f4db453da32abb05a5c4e0249d6180d2b8a58d72d08dbd6a0 22 1a4f19ee9e186ee739daecbc778501c5851d3fb5d05c4a3c1200e599855e8689 777abf12375b7f605b21535eb0d6232ce99581c6d2b1179af976cd0708ad27ff e4e2c33a2ea67f34bf3ac1e9d99edaad501c7dc4ea82f4b60e9d959418d8438d"},{"location":"usage-examples/#attribute_values","title":"attribute_values","text":"<pre><code>pd.DataFrame([tab for param_id, tab_list in pf2.commited_tables['b5c2e4a9bdcb57cc70bdb7310c7909cc1549550add79e3fbcc8aa1cf323cd8ca']\\\n    ['attribute_values']\\\n        [param_set_id].items() \\\n            for tab in tab_list])\n</code></pre> attribute_id previous_attribute_id attribute_name attribute_value attribute_value_type 0 ee25af17445d7622cbf61a5b9424246a1f3104704b68bd31b9b7532471d492e5 None name Some name str 1 8b5b2be24e60ba407b90967820da8a1385a6d67691a02bc663703160ef655101 None age 111 int 2 52ea872c99c586530348ba8902dcab831761673d25cf1cb0023576820289ce6b None country Some land str 3 ee25af17445d7622cbf61a5b9424246a1f3104704b68bd31b9b7532471d492e5 None name Some name str 4 7d5ee0e0cd00c3703e5f346c6887baf503faaf9fe090774f6866311f4fa34179 None employee {'name': 'Some name', 'id': 10293, 'contact': {'email': 'some.name... dict 5 3367512147bf19ae99c986b356af11dcdc067376aa1b79eb8ba8f61324e8dc18 None id 10293 int 6 341769820d8937a5c9f9b980eefca37f3f37fcc6fd01c6f4c930fdb9d5dd5128 None contact {'email': 'some.name@example.com', 'phone': '+1234567890'} dict 7 2e8b00e571f9d835d3f022a9ff49b9779034ab21bffdcde075d9d729fabeb960 None email some.name@example.com str 8 ecd93cf051988b23b3590415f4e7d550de264600d7d2af8704c973b9c98ca6a9 None phone +1234567890 str 9 fa4e8d81f4dbe6d306aff59bea4693d325a203be5d5b9fde5d5f1e7cce26b861 None 0 \\X/Fc7;/v`6joU5z*n{35zFB&lt;&lt;6BMC,}/_04],&gt;v$Jr2&amp;0M_7qU'IY#6uO\\$kEr.)Z... str 10 c26e7e96f0f3647c159b0934f4dc55207ac059abb56005d7a8acd8344ef14798 None 1 A7J+1x5|?r]2zg54nxoa&gt;W*loh8Np~*9+*KxWLuD/Z5g!=DN&gt;}c#]Dt-&gt;tiov?|Ms.... str 11 f7cd339f77c1799f399d8ebcbb27f2d41a448622254d64e9270ae2316211ac1d None 2 LUs%&lt;HRbNA_4:yYTh!!x&amp;oFZ201sQ7;~Q_IYr\"lGRMd=xx,r}|n8zHIP6%JN)\",vQI... str 12 15a33fe62774a1857b404f453ba1195eb4355e10bc9519f2f991dd7ba8db19b7 None 3 b&amp;z(/Z{s@U&gt;@o!}{+(mmygo}u~AHgdu&gt;:jz4fNBm0;Q6'o+f%H/z3^8Hh!w&lt;#z.~21... str 13 99761e3d58bc213dc3ab33f2dc8dabe5f97d3aea6b59cd367d40b76937f49aa6 None 4 .#;5Cu]5~8ZmYBLI4w)|h=)C&lt;(#`KSoM,`7n?dun7]LX&gt;j7/U&gt;Jf||4`AN_u*W!*3)... str 14 036a9c122c1f4c9304afa23c4d1fce5224c270a206889afa689f3efb36ff368d None 5 0S)*}6\"i)kUg3=n:}&gt;Ji)!\"BTbzsdgps8{cR]`.41QJ&lt;O{wr[}}gGan_O63D0WBr]&lt;... str 15 e72aa8015688052f4e7fddbf4c74e5bf2bd74239ebf3902a5fdc008ecb03aa46 None 6 Xb;IgM/`T:VY*6XQ:nvB3)&gt;@32w8H-cD\"g&gt;x`MlWp_TnuyCaz62e??md&lt;8tR$Q=X7&lt;... str 16 0ae8eda3dbeedbc17e27a679c5426dd3af1434f7c37b4ecd3b2fb5c492272b75 None 7 pq.%\\nmm;M!^cyS|ApMpnjUS&lt;#Ov?e+n\"wX/to.wjifCG.fKK@6gI+Wvax&amp;}j18R8p... str 17 cedcfbb0d95798514b6aaf30118fff7b46f863f1bc8b80bb2ddd2145e5b3f318 None 8 +-;Zt=ex str 18 ace2f31433212fbf9e764069a30a7675ca78f496d31f061d06d0a0420fc52768 None 0 b'\\x80\\x04\\x95h\\x00\\x00\\x00\\x00\\x00\\x00\\x00}\\x94(\\x8c\\x07integer\\x... bytes 19 87d93e1862f0f58199c3fcb7114b92fe59f03581804b1c8419868fb00ff8a469 None 0 b'{\\n \"cells\": [\\n  {\\n   \"cell_type\": \"markdown\",\\n   \"metadata\":... bytes 20 b4a705d09aa0361f4db453da32abb05a5c4e0249d6180d2b8a58d72d08dbd6a0 None 1 xt/plain\": [\\n       \"4\"\\n      ]\\n     },\\n     \"execution_count\"... bytes 21 e4e2c33a2ea67f34bf3ac1e9d99edaad501c7dc4ea82f4b60e9d959418d8438d None 2 \"language\": \"python\",\\n   \"name\": \"python3\"\\n  },\\n  \"language_... bytes 22 777abf12375b7f605b21535eb0d6232ce99581c6d2b1179af976cd0708ad27ff None 3 r\": \"python\",\\n   \"pygments_lexer\": \"ipython3\",\\n   \"version\": \"3.... bytes"},{"location":"usage-examples/#10-scores","title":"10. Scores","text":""},{"location":"usage-examples/#i-attribute-overlap-ratio","title":"I. Attribute overlap ratio","text":"<p>AOR represents an overlap ratio between attribute ids that:</p> <ul> <li>belong to a parameter within parameter set</li> <li>belong to a parameter sets within solution</li> <li>belong to a solution within solutions</li> </ul> <p>The score is between $0$ and $1$, and the greater the score, the greater is an overlap between attribute ids within select group and non unique attribute ids.</p>"},{"location":"usage-examples/#ii-parameter-overlap-ratio","title":"II. Parameter overlap ratio","text":"<p>POR represents an overlap ratio between parameter ids that:</p> <ul> <li>belong to a parameter sets within solution</li> <li>belong to a solution within solutions</li> </ul> <p>The score is between $0$ and $1$, and the greater the score, the greater is an overlap between parameter ids within select group and non unique parameter ids.</p>"},{"location":"usage/","title":"Usage","text":""}]}